@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap');
@import 'tailwindcss' source(none);

@source "./";

@theme {
  --font-quicksand: 'Quicksand', serif;
  --animate-wavey: wavey 1000ms linear infinite;
  --animation-delay-sm: 100ms;
  --animation-delay-md: 300ms;
  --animation-delay-lg: 500ms;
  --animation-delay-xl: 1000ms;

  @keyframes wavey {
    0%,
    100% {
      transform: scaleY(0.5);
    }
    50% {
      transform: scaleY(1.5);
    }
  }
}

@utility animation-delay-* {
  /* allows the use of CSS variables, i.e. --animation-delay-sm*/
  animation-delay: --value(--animation-delay- *);

  /* New in V4 - allows the use of arbitrary values without the use of brackets, i.e. --animation-delay-200 */
  animation-delay: calc(--value(number) * 1ms);
  /* Note for this trick: the unit can be anything, it can be px, rem, pt etc. In this case we needed it to be ms */

  /* for use of arbitrary values with brackets, i.e. --animation-delay-[650ms] */
  animation-delay: --value([ *]);
}

@layer base {
  body {
    font-family: var(--font-quicksand);
  }
  h1 {
    @apply text-6xl font-bold;
  }
  h2 {
    @apply text-5xl font-bold;
  }
  h3 {
    @apply text-4xl font-bold;
  }
  h4 {
    @apply text-3xl font-bold;
  }
  h5 {
    @apply text-2xl font-bold;
  }
  h6 {
    @apply text-xl font-bold;
  }
}

/* 
Custom variant for group open state. 
 This variant checks if the parent with class 'group' has the 'open' state.
 @slot takes in the style from the selected class.
 i.e. group-open:rotate-45 > rotate-45 is passed to @slot
*/
@custom-variant group-open {
  &:is(:where(.group):is(.open, [open], :popover-open, :open) *) {
    @slot;
  }
}

@custom-variant peer-open {
  &:is(:where(.peer):is(.open, [open], :popover-open, :open) ~ *) {
    @slot;
  }
}

@custom-variant dark (&:where(.dark, .dark *));

.container {
  width: 100%;
  @media (width >= 40rem /* 640px */) {
    max-width: 40rem /* 640px */;
  }
  @media (width >= 48rem /* 768px */) {
    max-width: 48rem /* 768px */;
  }
  @media (width >= 64rem /* 1024px */) {
    max-width: 64rem /* 1024px */;
  }
}
